function y = rk6(ode,x,y0)
%RK Gauss orden 6
%ode es nuestra funcion

maxiter=100;
niter=0;
[p,n]=size(y0);
h=x(2)-x(1);
sigma=sqrt(eps);

if (nargin < 4), tol = []; end;
if (isempty(tol)), tol = 1e-6; end;
if tol < eps
    tol = 1e-6;
end

%Tableau de Butcher
A=[5/36 2/9-sqrt(15)/5 5/36-sqrt(15)/30;...
5/36+sqrt(15)/24 2/9 5/36-sqrt(15)/24;...
5/36+sqrt(15)/30 2/9+sqrt(15)/5 5/36];
b=[5/18;4/9;5/18];c=[(5-sqrt(15))/10;1/2;(5+sqrt(15))/10];
%Definici\'on
%Z1=y0+h*[ode(x+c(1)*h,Z1) ode(x+c(2)*h,Z2) ode(x+c(3)*h,Z3)]*[A(1,:)]';
%Z2=y0+h*[ode(x+c(1)*h,Z1) ode(x+c(2)*h,Z2) ode(x+c(3)*h,Z3)]*[A(2,:)]';
%Z3=y0+h*[ode(x+c(1)*h,Z1) ode(x+c(2)*h,Z2) ode(x+c(3)*h,Z3)]*[A(3,:)]';

%y=y0(:,1:(n-1))*[A(n,2:(n+1))]';
Z1t=y0;Z2t=y0;Z3t=y0;Zt=[Z1t;Z2t;Z3t];V=Zt;

%Los bloques dependen del tableau

while (1) %verdadero, sigue hasta que le diga que se detenga
for i=1:3*p
    ep=zeros(3*p,1); ep(i)=sigma;
    ep1=ep(1:p,:);
    ep2=ep((p+1):(2*p),:);
    ep3=ep((2*p+1):(3*p),:);
    J1(:,i)=([ode(x(1)+c(1)*h,Z1t+ep1) ode(x(1)+c(2)*h,Z2t+ep2) ode(x(1)+c(3)*h,Z3t+ep3)]*[A(1,:)]'-...
    [ode(x(1)+c(1)*h,Z1t-ep1) ode(x(1)+c(2)*h,Z2t-ep2) ode(x(1)+c(3)*h,Z3t-ep3)]*[A(1,:)]')/2/sigma;
    J2(:,i)=([ode(x(1)+c(1)*h,Z1t+ep1) ode(x(1)+c(2)*h,Z2t+ep2) ode(x(1)+c(3)*h,Z3t+ep3)]*[A(2,:)]'-...
    [ode(x(1)+c(1)*h,Z1t-ep1) ode(x(1)+c(2)*h,Z2t-ep2) ode(x(1)+c(3)*h,Z3t-ep3)]*[A(2,:)]')/2/sigma;
    J3(:,i)=([ode(x(1)+c(1)*h,Z1t+ep1) ode(x(1)+c(2)*h,Z2t+ep2) ode(x(1)+c(3)*h,Z3t+ep3)]*[A(3,:)]'-...
    [ode(x(1)+c(1)*h,Z1t-ep1) ode(x(1)+c(2)*h,Z2t-ep2) ode(x(1)+c(3)*h,Z3t-ep3)]*[A(3,:)]')/2/sigma;
end

J=h*[J1;J2;J3]-eye(3*p);
Ztnew = Zt-J\(h*[[ode(x(1)+c(1)*h,Z1t) ode(x(1)+c(2)*h,Z2t) ode(x(1)+c(3)*h,Z3t)]*[A(1,:)]';...
[ode(x(1)+c(1)*h,Z1t) ode(x(1)+c(2)*h,Z2t) ode(x(1)+c(3)*h,Z3t)]*[A(2,:)]';...
[ode(x(1)+c(1)*h,Z1t) ode(x(1)+c(2)*h,Z2t) ode(x(1)+c(3)*h,Z3t)]*[A(3,:)]']+V-Zt);
niter=niter+1;

if norm(Zt-Ztnew) < tol*norm(Zt) %condicion para salir del while
%y=[y0;y];
%if fflag==1 y=[y(1:p);y(ni*p-p+1:ni*p)]; end;
    Z1t=Zt(1:p,:);Z2t=Zt((p+1):(2*p),:);Z3t=Zt((2*p+1):(3*p),:);
    y=[y0 y0+h*[ode(x(1)+c(1)*h,Z1t) ode(x(1)+c(2)*h,Z2t) ode(x(1)+c(3)*h,Z3t)]*b];
    return;
end

Zt=Ztnew;
Z1t=Zt(1:p,:);Z2t=Zt((p+1):(2*p),:);Z3t=Zt((2*p+1):(3*p),:);
end
